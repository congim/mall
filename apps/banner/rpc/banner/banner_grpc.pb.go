// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: banner.proto

package banner

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BannerClient is the client API for Banner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BannerClient interface {
	HomeBanner(ctx context.Context, in *BannerReq, opts ...grpc.CallOption) (*BannerRes, error)
}

type bannerClient struct {
	cc grpc.ClientConnInterface
}

func NewBannerClient(cc grpc.ClientConnInterface) BannerClient {
	return &bannerClient{cc}
}

func (c *bannerClient) HomeBanner(ctx context.Context, in *BannerReq, opts ...grpc.CallOption) (*BannerRes, error) {
	out := new(BannerRes)
	err := c.cc.Invoke(ctx, "/banner.Banner/HomeBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BannerServer is the server API for Banner service.
// All implementations must embed UnimplementedBannerServer
// for forward compatibility
type BannerServer interface {
	HomeBanner(context.Context, *BannerReq) (*BannerRes, error)
	mustEmbedUnimplementedBannerServer()
}

// UnimplementedBannerServer must be embedded to have forward compatible implementations.
type UnimplementedBannerServer struct {
}

func (UnimplementedBannerServer) HomeBanner(context.Context, *BannerReq) (*BannerRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HomeBanner not implemented")
}
func (UnimplementedBannerServer) mustEmbedUnimplementedBannerServer() {}

// UnsafeBannerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BannerServer will
// result in compilation errors.
type UnsafeBannerServer interface {
	mustEmbedUnimplementedBannerServer()
}

func RegisterBannerServer(s grpc.ServiceRegistrar, srv BannerServer) {
	s.RegisterService(&Banner_ServiceDesc, srv)
}

func _Banner_HomeBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BannerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerServer).HomeBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/banner.Banner/HomeBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerServer).HomeBanner(ctx, req.(*BannerReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Banner_ServiceDesc is the grpc.ServiceDesc for Banner service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Banner_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "banner.Banner",
	HandlerType: (*BannerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HomeBanner",
			Handler:    _Banner_HomeBanner_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "banner.proto",
}
